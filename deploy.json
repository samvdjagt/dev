{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "utcValue": {
            "type": "string",
            "defaultValue": "[utcNow()]"
        },
        "existingVnetName": {
            "type": "string",
            "metadata": {
                "description": "The name of the virtual network the VMs will be connected to."
            }
        },
        "existingSubnetName": {
            "type": "string",
            "metadata": {
                "description": "The subnet the VMs will be placed in."
            }
        },
        "virtualNetworkResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "The resource group containing the existing virtual network."
            }
        },
        "enablePersistentDesktop": {
            "type": "bool",
            "metadata": {
                "description": "Set this parameter to true if you would like to enable Persistent Desktop experience. Defaults to false."
            },
            "defaultValue": false
        },
        "defaultDesktopUsers": {
            "type": "string",
            "metadata": {
                "description": "Provide a comma separated list of users you would like to assign to access the desktop for this host pool. Example: user1@contoso.com,user2@contoso.com,user3@contoso.com "
            },
            "defaultValue": ""
        },
        "tenantAdminUpnOrApplicationId": {
            "type": "string",
            "metadata": {
                "description": "The template will fail if you enter a user account that requires MFA or an application that is secured by a certificate. The UPN or ApplicationId must be an RDS Owner in the Windows Virtual Desktop Tenant to create the hostpool or an RDS Owner of the host pool to provision the host pool with additional VMs."
            }
        },
        "tenantAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password that corresponds to the tenant admin UPN."
            }
        },
        "isServicePrincipal": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "The boolean value indicating if the credentials are for a service principal."
            }
        },
        "aadTenantId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "(Required when isServicePrincipal = True) This value identifies the Azure AD tenant of the service principal."
            }
        },
        "createAvailabilitySet": {
            "type": "bool",
            "metadata": {
                "description": "Set this parameter to true if you would like to create Availability set. Defaults to true. Please note that if 'enablePersistentDesktop' is true, this parameter will be ignored and no availability set wil be created. Using an Availability set limits you to a maximum of 200 virtual machines For more info: https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/azure-subscription-service-limits#virtual-machines-limits---azure-resource-manager."
            },
            "defaultValue": true
        }
    },
    "variables": {
        "_artifactsLocation": "https://raw.githubusercontent.com/Azure/RDS-Templates/master/wvd-templates/",
        "_createPidResource": true,
        "_artifactsLocationSasToken": "",
        "AdminPasswordSecret": "adminPassword",
        "rdBrokerURL": "https://rdbroker.wvd.microsoft.com",
        "existingDomainUsername": "[first(split(parameters('tenantAdminUpnOrApplicationId'), '@'))]",
        "identityName": "WVDServicePrincipal",
        "location": "[resourcegroup().location]",
        "rgName": "[resourcegroup().name]",
        "keyvaultName": "[concat('keyvault', parameters('utcValue'))]",
        "componentsName": "[concat('comp', toLower(parameters('utcValue')))]",
        "subnet-id": "[resourceId(parameters('virtualNetworkResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('existingVnetName'), parameters('existingSubnetName'))]",
        "tenantId": "[subscription().tenantId]",
        "registrationExpirationHours": "48",
        "RDPSModSource": "attached",
        "Owner": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
        "Contributor": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
        "Reader": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
        "roleNameGuid": "[guid(subscription().subscriptionId)]"        
    },
    "functions": [
    ],
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('componentsName')]",
            "location": "[variables('location')]",
            "dependsOn": [],
            "tags": {},
            "sku": {
                "name": "Standard_RAGRS"
            },
            "kind": "StorageV2",
            "properties": {
                "accessTier": "Hot",
                "minimumTlsVersion": "TLS1_0",
                "supportsHttpsTrafficOnly": true,
                "allowBlobPublicAccess": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Allow",
                    "ipRules": []
                }
            },
            "resources": [
                {
                  "type": "blobServices/containers",
                  "apiVersion": "2019-06-01",
                  "name": "[concat('default/', 'components')]",
                  "properties": {
                    "publicAccess": "Container"
                  },
                  "dependsOn": [
                    "[variables('componentsName')]"
                  ]
                }
            ]
        },
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "name": "[variables('identityName')]",
            "apiVersion": "2018-11-30",
            "location": "[variables('location')]",
            "dependsOn": ["[variables('componentsName')]"],
            "properties": {}
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "name": "nestedTemplate1",
            "dependsOn": [
                "[variables('identityName')]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {

                    },
                    "variables": {
                        
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Authorization/roleAssignments",
                            "apiVersion": "2018-09-01-preview",
                            "name": "[variables('roleNameGuid')]",
                            "properties": {
                                "roleDefinitionId": "[variables('Contributor')]",
                                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities/', 'WVDServicePrincipal'), '2018-11-30').principalId]"
                            }
                        }
                    ],
                    "outputs": {

                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "name": "nestedTemplate2",
            "dependsOn": [
                "nestedTemplate1"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                    },
                    "variables": {
                        "identityName": "WVDServicePrincipal",
                        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities/', 'WVDServicePrincipal'), '2018-11-30').principalId]",
                        "clientId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities/', 'WVDServicePrincipal'), '2018-11-30').tenantId]"
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Resources/deploymentScripts",
                            "apiVersion": "2019-10-01-preview",
                            "name": "nameGenerationScript",
                            "location": "[resourceGroup().location]",
                            "dependsOn": [ 
                            ],
                            "kind": "AzurePowerShell",
                            "identity": {
                              "type": "userAssigned",
                              "userAssignedIdentities": { "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities/', 'WVDServicePrincipal')]": {} 
                              }
                            },
                            "properties": {
                              "forceUpdateTag": "[parameters('utcValue')]",
                              "azPowerShellVersion": "3.0",
                              "timeout": "PT1H",
                              "arguments": "[concat('-AppName ', variables('identityName'), ' -SubscriptionId ', subscription().subscriptionId)]",
                              "primaryScriptUri": "https://raw.githubusercontent.com/samvdjagt/dev/master/createServicePrincipal.ps1",
                              "cleanupPreference": "Always",
                              "retentionInterval": "P1D"
                            }
                        }
                    ],
                    "outputs": {
     
                    }
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2019-09-01",
            "name": "[variables('keyvaultName')]",
            "location": "[variables('location')]",
            "properties": {
                "enabledForDeployment": true,
                "enabledForTemplateDeployment": true,
                "enabledForDiskEncryption": true,
                "enableSoftDelete": true,
                "lockForDeletion": false,
                "tenantId": "[variables('tenantId')]",
                "accessPolicies": [
                   {
                        "tenantId": "[variables('tenantId')]",
                        "objectId": "fa11c8c7-bc58-4be9-b78c-3165e09a38c7",
                        "permissions": {
                            "keys": [
                                "All"
                            ],
                            "secrets": [
                                "All"
                            ],
                            "certificates": [
                                "All"
                            ]
                        }
                    } 
                ],
                "sku": {
                    "name": "Standard",
                    "family": "A"
                },
                "secretsObject": {
                    "value": {
                        "secrets": []
                    }
                }
            },
            "dependsOn": [
               
            ],
            "resources": [
            ]
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2015-06-01",
            "name": "[concat(variables('keyvaultName'), '/', variables('AdminPasswordSecret'))]",
            "properties": {
                "value": "[parameters('tenantAdminPassword')]"
            },
            "dependsOn": [
                "[concat('Microsoft.KeyVault/vaults/', variables('keyvaultName'))]"
            ]
        }
    ],
    "outputs": {
    }
}
